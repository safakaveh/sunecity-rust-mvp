version: '3.9'

services:

  backend:
    build:
      context: ./backend
    container_name: rust_app
    env_file:
      - ./backend/.env
    expose:
      - "8080"
      - "8081"
    restart: unless-stopped
    networks:
      - backend

  frontend:
      build:
        context: ./frontend
        dockerfile: Dockerfile
      container_name: svelte_frontend
      depends_on:
        - backend
      networks:
        - frontend
        - backend

  certgen:
      image: alpine
      container_name: certgen
      volumes:
        - ./nginx/certs:/certs
      entrypoint: sh -c "
        if [ ! -f /certs/selfsigned.crt ]; then
        echo 'Creating self-signed certificate...';
        apk add --no-cache openssl > /dev/null;
        openssl req -x509 -nodes -days 365 \
        -newkey rsa:2048 \
        -keyout /certs/selfsigned.key \
        -out /certs/selfsigned.crt \
        -subj '/CN=iic.local';
        echo 'Certificate created.';
        else
        echo 'Certificate already exists. Skipping.';
        fi"

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/certs:/etc/nginx/ssl
      - ./frontend/build:/var/www/
    depends_on:
      - backend
      - frontend
      - certgen
    entrypoint: /bin/sh -c "
      while [ ! -f /etc/nginx/ssl/selfsigned.crt ]; do
      echo 'Waiting for certificate...';
      sleep 2;
      done;
      echo 'Starting Nginx with SSL';
      nginx -g 'daemon off;';"
    restart: unless-stopped
    networks:
      - backend
      - frontend

  db:
    image: postgis/postgis
    container_name: sunecity-postgis
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: sunecity
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped
    #networks:
    #  - backend

volumes:
  pgdata:

networks:
  backend:
  frontend:
